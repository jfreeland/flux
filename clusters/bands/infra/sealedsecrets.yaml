# https://artifacthub.io/packages/helm/bitnami-labs/sealed-secrets
---
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: sealed-secrets
  namespace: flux-system
spec:
  interval: 5m
  url: https://bitnami-labs.github.io/sealed-secrets
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: sealed-secrets
  namespace: flux-system
spec:
  releaseName: sealed-secrets
  targetNamespace: kube-system
  chart:
    spec:
      chart: sealed-secrets
      version: 2.17.2
      sourceRef:
        kind: HelmRepository
        name: sealed-secrets
  interval: 5m
  values:
    keyrenewperiod: "8760h00m00s"
    ## @param hostNetwork Sealed Secrets pods' hostNetwork
    hostNetwork: false
    ## Sealed Secrets controller ports to open
    ## If hostNetwork true: the hostPort is set identical to the containerPort
    ## @param containerPorts.http Controller HTTP Port on the Host and Container
    ## @param containerPorts.metrics Metrics HTTP Port on the Host and Container
    ##
    containerPorts:
      http: 8080
      metrics: 8081
    ## Sealed Secrets controller ports to be exposed as hostPort
    ## If hostNetwork is false, only the ports specified here will be exposed (or not if set to an empty string)
    ## @param hostPorts.http Controller HTTP Port on the Host
    ## @param hostPorts.metrics Metrics HTTP Port on the Host
    ##
    hostPorts:
      http: ""
      metrics: ""
    service:
      ## @param service.type Sealed Secret service type
      ##
      type: ClusterIP
      ## @param service.loadBalancerClass Sealed Secret service loadBalancerClass
      ##
      loadBalancerClass: ""
      ## @param service.port Sealed Secret service HTTP port
      ##
      port: 8080
      ## @param service.nodePort Node port for HTTP
      ## Specify the nodePort value for the LoadBalancer and NodePort service types
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
      ## NOTE: choose port between <30000-32767>
      ##
      nodePort: ""
      ## @param service.annotations [object] Additional custom annotations for Sealed Secret service
      ##
      annotations: {}
    ## Sealed Secret ingress parameters
    ## ref: http://kubernetes.io/docs/user-guide/ingress/
    ##
    ingress:
      ## @param ingress.enabled Enable ingress record generation for Sealed Secret
      ##
      enabled: false
      ## @param ingress.pathType Ingress path type
      ##
      pathType: ImplementationSpecific
      ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)
      ##
      apiVersion: ""
      ## @param ingress.ingressClassName IngressClass that will be be used to implement the Ingress
      ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster.
      ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
      ##
      ingressClassName: ""
      ## @param ingress.hostname Default host for the ingress record
      ##
      hostname: sealed-secrets.local
      ## @param ingress.path Default path for the ingress record
      ##
      path: /v1/cert.pem
      ## @param ingress.annotations [object] Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
      ## Use this parameter to set the required annotations for cert-manager, see
      ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
      ## e.g:
      ## annotations:
      ##   kubernetes.io/ingress.class: nginx
      ##   cert-manager.io/cluster-issuer: cluster-issuer-name
      ##
      annotations: {}
      ## @param ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
      ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
      ## You can:
      ##   - Use the `ingress.secrets` parameter to create this TLS secret
      ##   - Relay on cert-manager to create it by setting the corresponding annotations
      ##   - Relay on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
      ##
      tls: false
      ## @param ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
      ##
      selfSigned: false
      ## @param ingress.extraHosts [array] An array with additional hostname(s) to be covered with the ingress record
      ## e.g:
      ## extraHosts:
      ##   - name: sealed-secrets.local
      ##     path: /
      ##
      extraHosts: []
      ## @param ingress.extraPaths [array] An array with additional arbitrary paths that may need to be added to the ingress under the main host
      ## e.g:
      ## extraPaths:
      ## - path: /*
      ##   backend:
      ##     serviceName: ssl-redirect
      ##     servicePort: use-annotation
      ##
      extraPaths: []
      ## @param ingress.extraTls [array] TLS configuration for additional hostname(s) to be covered with this ingress record
      ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
      ## e.g:
      ## extraTls:
      ## - hosts:
      ##     - sealed-secrets.local
      ##   secretName: sealed-secrets.local-tls
      ##
      extraTls: []
      ## @param ingress.secrets [array] Custom TLS certificates as secrets
      ## NOTE: 'key' and 'certificate' are expected in PEM format
      ## NOTE: 'name' should line up with a 'secretName' set further up
      ## If it is not set and you're using cert-manager, this is unneeded, as it will create a secret for you with valid certificates
      ## If it is not set and you're NOT using cert-manager either, self-signed certificates will be created valid for 365 days
      ## It is also possible to create and manage the certificates outside of this helm chart
      ## Please see README.md for more information
      ## e.g:
      ## secrets:
      ##   - name: sealed-secrets.local-tls
      ##     key: |-
      ##       -----BEGIN RSA PRIVATE KEY-----
      ##       ...
      ##       -----END RSA PRIVATE KEY-----
      ##     certificate: |-
      ##       -----BEGIN CERTIFICATE-----
      ##       ...
      ##       -----END CERTIFICATE-----
      ##
      secrets: []
